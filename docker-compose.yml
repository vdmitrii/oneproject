version: '3.8'

services:
  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
    ports:
      - 8501:8501
    volumes:
        - ./front:/app

  mlflow:
    container_name: mlflow_server
    restart: always
    build:
      context: ./mlflow
      dockerfile: Dockerfile
    image: mlflow_server
    ports:
      - "5000:5000"
    networks:
      - postgres
      # - minio_app
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - MLFLOW_S3_ENDPOINT_URL=${MLFLOW_S3_ENDPOINT_URL}
    command: mlflow server --backend-store-uri postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db/${POSTGRES_DB} --default-artifact-root s3://${AWS_S3_BUCKET}/ --host 0.0.0.0
  
  db:
    container_name: pg_container
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    volumes:
       - my-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres

volumes:
  postgres:
  my-data:

networks:
  postgres:
    driver: bridge
  minio_app:
    driver: bridge

  # restarter:
  #   image: docker:cli
  #   restart: unless-stopped
  #   volumes: ["/var/run/docker.sock:/var/run/docker.sock"]
  #   entrypoint: ["/bin/sh","-c"]
  #   command:
  #     - |
  #       while true; do
  #         if [ "$(date +'%H:%M')" = '00:00' ]; then
  #           docker restart frontend
  #         fi
  #         sleep 60
  #       done

  # api:
  #   build:
  #     context: ./app
  #     dockerfile: Dockerfile.prod
  #   command: uvicorn app.main:app --reload --workers 4 --host 0.0.0.0 --port 8000
  #   volumes:
  #     - ./app:/usr/src/app
  #   ports:
  #     - 8004:8000
    # environment:
    #   - ENVIRONMENT=dev
    #   - TESTING=0
    #   - DATABASE_URL=postgres://postgres:postgres@web-db:5432/web_dev
    #   - DATABASE_TEST_URL=postgres://postgres:postgres@web-db:5432/web_test
    # depends_on:
    #   - web-db